{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/oleksandr/WebstormProjects/Pokedex/pokedex-react-native/src/PokemonModalCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nexport var PokemonModalCard = function PokemonModalCard(_ref) {\n  var url = _ref.url,\n      index = _ref.index,\n      close = _ref.close;\n\n  var _useState = useState({\n    id: 1,\n    name: '',\n    types: [],\n    stats: [],\n    weight: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemon = _useState2[0],\n      setPokemon = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var imgUrl = 'https://assets.pokemon.com/assets/cms2/img/pokedex/full';\n  compo(function () {\n    fetch(\"\" + url).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      var name = data.name,\n          id = data.id,\n          types = data.types,\n          stats = data.stats,\n          weight = data.weight,\n          rest = _objectWithoutProperties(data, [\"name\", \"id\", \"types\", \"stats\", \"weight\"]);\n\n      stats.reverse();\n      var pokemonName = name[0].toUpperCase() + name.slice(1);\n      setPokemon({\n        id: id,\n        name: pokemonName,\n        types: types,\n        stats: stats,\n        weight: weight\n      });\n      setLoading(false);\n    });\n  }, [pokemon]);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, loading && React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#2196F3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 26\n    }\n  }), React.createElement(View, {\n    style: styles.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, pokemon.name), React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: index < 10 ? imgUrl + \"/00\" + index + \".png\" : index < 100 ? imgUrl + \"/0\" + index + \".png\" : imgUrl + \"/\" + index + \".png\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: styles.types,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, pokemon.types.map(function (type, index) {\n    return React.createElement(Text, {\n      style: styles.type,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 32\n      }\n    }, type.type.name);\n  })), pokemon.stats.map(function (stat, index) {\n    return React.createElement(Text, {\n      key: index,\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 32\n      }\n    }, stat.stat.name, \" - \", stat.base_stat);\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"weight - \", pokemon.weight), React.createElement(Button, {\n    title: 'Close',\n    onPress: function onPress() {\n      return close();\n    },\n    color: '#F44336',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  })));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000000aa'\n  },\n  box: {\n    backgroundColor: '#fff',\n    margin: 50,\n    padding: 10,\n    borderRadius: 10,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  image: {\n    width: 150,\n    height: 150\n  },\n  title: {\n    backgroundColor: '#2196F3',\n    borderRadius: 10,\n    color: '#fff',\n    fontSize: 25,\n    marginBottom: 15,\n    padding: 5\n  },\n  text: {\n    backgroundColor: '#2196F3',\n    borderRadius: 10,\n    color: '#fff',\n    fontSize: 16,\n    margin: 5,\n    padding: 5,\n    textTransform: 'uppercase',\n    width: '100%'\n  },\n  types: {\n    margin: 5,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center'\n  },\n  type: {\n    backgroundColor: '#303F9F',\n    borderRadius: 10,\n    color: '#fff',\n    fontSize: 16,\n    margin: 5,\n    padding: 5,\n    textTransform: 'uppercase'\n  }\n});","map":{"version":3,"sources":["/home/oleksandr/WebstormProjects/Pokedex/pokedex-react-native/src/PokemonModalCard.js"],"names":["React","useEffect","useState","PokemonModalCard","url","index","close","id","name","types","stats","weight","pokemon","setPokemon","loading","setLoading","imgUrl","compo","fetch","then","response","json","data","rest","reverse","pokemonName","toUpperCase","slice","styles","container","box","title","image","uri","map","type","stat","text","base_stat","StyleSheet","create","flex","backgroundColor","margin","padding","borderRadius","alignItems","justifyContent","width","height","color","fontSize","marginBottom","textTransform","flexDirection","flexWrap"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {View, StyleSheet, Text, Image, Button, ActivityIndicator} from 'react-native'\n\nexport const PokemonModalCard = ({url, index, close}) => {\n    const [pokemon, setPokemon] = useState({\n        id: 1,\n        name: '',\n        types: [],\n        stats: [],\n        weight: ''\n    });\n    const [loading, setLoading] = useState(true);\n    const imgUrl = 'https://assets.pokemon.com/assets/cms2/img/pokedex/full';\n\n\n\n    compo(() => {\n        fetch(`${url}`)\n            .then(response => response.json())\n            .then(data => {\n                const {name, id, types, stats, weight, ...rest} = data;\n                stats.reverse();\n                const pokemonName = name[0].toUpperCase() + name.slice(1);\n                setPokemon({\n                    id,\n                    name: pokemonName,\n                    types,\n                    stats,\n                    weight,\n                });\n                setLoading(false)\n            })\n    },[pokemon]);\n\n    return (\n        <View style={styles.container}>\n\n            {loading &&  <ActivityIndicator size=\"large\" color=\"#2196F3\" />}\n\n\n            <View style={styles.box}>\n                <Text style={styles.title}>{pokemon.name}</Text>\n                <Image\n                    style={styles.image}\n                    source={{\n                        uri: (index < 10) ? `${imgUrl}/00${index}.png` :\n                            (index < 100) ? `${imgUrl}/0${index}.png` :\n                                `${imgUrl}/${index}.png`\n                    }}\n                />\n                <View style={styles.types}>\n                    {pokemon.types.map((type, index) => {\n                        return <Text style={styles.type} key={index}>{type.type.name}</Text>\n                    })}\n                </View>\n                    {pokemon.stats.map((stat, index) => {\n                        return <Text key={index}\n                                     style={styles.text}\n                        >{stat.stat.name} - {stat.base_stat}</Text>\n                    })}\n                <Text style={styles.text}>weight - {pokemon.weight}</Text>\n                <Button title={'Close'}\n                        onPress={() => close()}\n                        color={'#F44336'}\n                />\n            </View>\n        </View>\n    )\n};\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#000000aa'\n    },\n    box: {\n        backgroundColor: '#fff',\n        margin: 50,\n        padding: 10,\n        borderRadius: 10,\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    image: {\n        width: 150,\n        height: 150,\n    },\n    title: {\n        backgroundColor: '#2196F3',\n        borderRadius: 10,\n        color: '#fff',\n        fontSize: 25,\n        marginBottom: 15,\n        padding: 5\n    },\n    text: {\n        backgroundColor: '#2196F3',\n        borderRadius: 10,\n        color: '#fff',\n        fontSize: 16,\n        margin: 5,\n        padding: 5,\n        textTransform: 'uppercase',\n        width: '100%'\n    },\n    types: {\n        margin: 5,\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        alignItems: 'center'\n    },\n    type: {\n        backgroundColor: '#303F9F',\n        borderRadius: 10,\n        color: '#fff',\n        fontSize: 16,\n        margin: 5,\n        padding: 5,\n        textTransform: 'uppercase',\n    }\n});\n"]},"metadata":{},"sourceType":"module"}